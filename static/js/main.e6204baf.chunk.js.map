{"version":3,"sources":["hoc/Aux.js","components/SearchBar.js","components/UI/Card.js","constants/index.js","components/RecipesList.js","components/FullRecipe.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","SearchBar","react_default","a","createElement","className","htmlFor","id","type","onChange","changeQuery","placeholder","defaultValue","changeSortType","value","onClick","loadRecipies","Card","style","backgroundImage","concat","recipe","image_url","dangerouslySetInnerHTML","__html","title","publisher","parseInt","social_rank","react_router_dom","to","recipe_id","APIkey","process","RecipesList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","recipes","query","sortType","page","error","loading","errorMessage","loadMore","loader","key","dist","size","event","_this2","setState","preventDefault","axios","get","then","response","data","length","toConsumableArray","count","catch","target","_this3","loadedRecipes","map","index","UI_Card","Aux","components_SearchBar","changeQueryHandler","changeSortTypeHandler","height","react_infinite_scroller_default","useWindow","pageStart","hasMore","Component","FullRecipe","match","params","ingredients","ingredient","loadedRecipe","rel","href","source_url","ingredientsList","App","react_router","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6204baf.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;\n","import React from 'react';\n\nconst SearchBar = function(props) {\n  return (\n    <header className=\"my-3\">\n      <form>\n          <div className=\"form-row align-items-center\">\n            <div className=\"col-auto\">\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <label className=\"input-group-text\" htmlFor=\"query\">\n                    <i className=\"fa fa-search\" />\n                  </label>\n                </div>\n                <input\n                  id=\"query\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  onChange={props.changeQuery}\n                  placeholder=\"Search By Ingredients or Name\"\n                />\n              </div>\n            </div>\n            <div className=\"col-auto\">\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <label className=\"input-group-text\" htmlFor=\"type-select\">\n                    Sort By\n                  </label>\n                </div>\n                <select id=\"type-select\" className=\"custom-select\" defaultValue=\"r\" onChange={props.changeSortType}>\n                  <option value=\"t\">Top-rated</option>\n                  <option value=\"r\">Trending</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-auto\">\n              <button\n                onClick={props.loadRecipies}\n                type=\"submit\"\n                className=\"btn btn-primary\">Search</button>\n            </div>\n          </div>\n        </form>\n      </header>\n  )\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Card = function(props) {\n  return (\n    <div className=\"w-25 my-3\">\n      <div className=\"card mx-3 h-100\">\n        <div style={{backgroundImage:`url(${props.recipe.image_url})`}} className=\"card-img\"></div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\" dangerouslySetInnerHTML={{__html: props.recipe.title}}></h5>\n          <p className=\"card-text\">{props.recipe.publisher}</p>\n          <p className=\"card-text\">\n            <span className=\"badge badge-info\">{parseInt(props.recipe.social_rank)}</span>\n          </p>\n        </div>\n        <div className=\"card-footer\">\n          <Link className=\"btn btn-primary\" to={\"/\" + props.recipe.recipe_id}>More</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;\n","export const APIkey = process.env.REACT_APP_API_KEY;\n","import React, { Component } from 'react';\nimport { ClipLoader } from 'react-spinners';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport Aux from '../hoc/Aux';\nimport SearchBar from './SearchBar';\nimport Card from './UI/Card';\n\nimport { APIkey } from '../constants/index';\n\nclass RecipesList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      recipes: [],\n      query: '',\n      sortType: 'r',\n      page: 1,\n      error: false,\n      loading: true,\n      errorMessage: '',\n      loadMore: true,\n    }\n\n    this.loader = <div className=\"d-flex w-100 justify-content-center\" key={this.state.page}><ClipLoader size={300} loading={this.state.loading}/></div>\n\n  }\n\n  loadRecipies(event) {\n    if (event) {\n      this.setState({recipes: [], page: 1})\n      event.preventDefault();\n    }\n    if (!this.state.loading) {\n      this.setState({loading: true});\n    }\n\n    axios.get(`https://www.food2fork.com/api/search?key=${APIkey}&q=${this.state.query}&sort=${this.state.sortType}&page${this.state.page}`)\n    .then(response => {\n      // Reached API Call limit\n      if (response.data.error === \"limit\") {\n        this.setState({error: true, errorMessage: 'API Call limit reached', loading: false, loadMore: false})\n      }\n      else if (!response.data.recipes.length) {\n        this.setState({error: true, errorMessage: 'No recipes found', loading: false, loadMore: false})\n      }\n      else {\n        this.setState({recipes: [...this.state.recipes, ...response.data.recipes], loading: false, error: false, page: this.state.page+1, loadMore: response.data.count === 30});\n      }\n\n    })\n    .catch(error => this.setState({error: true, errorMessage: 'Something went wrong'}))\n  }\n\n  changeQueryHandler(event) {\n    this.setState({query: event.target.value})\n  }\n\n  changeSortTypeHandler(event) {\n    this.setState({sortType: event.target.value})\n  }\n\n  render() {\n    let loadedRecipes = [];\n    if (this.state.recipes.length) {\n      loadedRecipes = this.state.recipes.map((recipe, index) => {\n        return (\n          <Card recipe={recipe} key={index}/>\n        )\n      })\n    }\n\n    return (\n      <Aux>\n          <SearchBar\n            changeQuery={(event) => this.changeQueryHandler(event)}\n            changeSortType={(event) => this.changeSortTypeHandler(event)}\n            loadRecipies={(event) => this.loadRecipies(event)}\n          />\n        <div style={{height: \"100vh\"}} >\n          <InfiniteScroll\n                useWindow={true}\n                pageStart={0}\n                loadMore={() => this.loadRecipies()}\n                hasMore={this.state.loadMore}\n                loader={this.loader}\n              >\n              { this.state.error ? <h1>{this.state.errorMessage}</h1> : <div className=\"d-flex flex-wrap\">{loadedRecipes}</div> }\n          </InfiniteScroll>\n        </div>\n      </Aux>\n    )\n  }\n}\n\nexport default RecipesList;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ClipLoader } from 'react-spinners';\nimport Aux from '../hoc/Aux';\n\nimport { APIkey } from '../constants/index';\n\nclass FullRecipe extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipe: null,\n      error: false,\n      errorMessage: '',\n      loading: true\n    }\n    this.loader = <div className=\"d-flex w-100 justify-content-center\" key={this.state.page}><ClipLoader size={300} loading={this.state.loading}/></div>\n  }\n\n  componentDidMount() {\n    axios.get(`https://www.food2fork.com/api/get?key=${APIkey}&rId=${this.props.match.params.id}`)\n    .then(response => {\n      // Reached API Call limit\n      if (response.data.error === 'limit') {\n        this.setState({error: true, errorMessage: 'API Call limit reached', loading: false})\n      }\n      // If you pass non-existing recipe_id you'll recieve an empty array\n      if (response.data.recipe.length === 0) {\n        this.setState({errorMessage: 'no recipe found', error: true, loading: false})\n      }\n      else if (response.data.recipe || response.data.recipe.length) {\n        this.setState({recipe: response.data.recipe, error: false, loading: false});\n      }\n    })\n    .catch(error => this.setState({error: true, errorMessage: 'Something went wrong', loading: false}));\n  }\n\n  ingredientsList() {\n    return this.state.recipe.ingredients.map((ingredient, index)=> {\n      return <li key={index} dangerouslySetInnerHTML={{__html: ingredient}}></li>\n    })\n  }\n\n  render() {\n    let loadedRecipe = null;\n\n    if ( this.state.loading ) {\n      loadedRecipe = this.loader;\n    }\n\n    if (this.state.recipe) {\n      loadedRecipe =\n      (<Aux>\n          <div className=\"w-25\">\n            <div className=\"card mx-3\">\n              <div style={{backgroundImage:`url(${this.state.recipe.image_url})`}} className=\"card-img\"></div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{this.state.recipe.title}</h5>\n                </div>\n              </div>\n            </div>\n            <div className=\"w-75\">\n              <div className=\"card mx-3\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">Recipe Info</h5>\n                    <ul className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">\n                        <h6>Publisher</h6>\n                          {this.state.recipe.publisher}\n                      </li>\n                      <li className=\"list-group-item\">\n                        <h6>Rank</h6>\n                        <span className=\"badge badge-info\">{parseInt(this.state.recipe.social_rank)}</span>\n                      </li>\n                      <li className=\"list-group-item\">\n                        <h6>Source</h6>\n                        <a target=\"_blank\" rel=\"noreferrer noopener\" href={this.state.recipe.source_url}>{this.state.recipe.source_url}</a>\n                      </li>\n                        <li className=\"list-group-item\">\n                        <h6>Ingredients</h6>\n                        <ul>\n                          {this.ingredientsList()}\n                        </ul>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </Aux>)\n    }\n\n\n    return (\n      <div className=\"d-flex my-3\">\n        {(!this.state.error) ? loadedRecipe : <h1>{this.state.errorMessage}</h1>}\n      </div>\n    )\n  }\n}\n\nexport default FullRecipe;\n","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nimport './App.css';\n\nimport RecipesList from './components/RecipesList';\nimport FullRecipe from './components/FullRecipe';\n\nconst App = function() {\n\n  return (\n     <BrowserRouter>\n        <div className=\"container\">\n          <Route path=\"/\" exact component={RecipesList}/>\n          <Route path=\"/:id\" exact component={FullRecipe}/>\n        </div>\n      </BrowserRouter>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}